extends layout

block content
    link(rel='stylesheet', href='/css/rangeSlider.css')
    link(rel='stylesheet', href='/css/rangeSliderFlat.css')
    link(rel='stylesheet', href='/css/player.css')
    link(rel='stylesheet', href='/css/font-awesome.min.css')
    h1 IMG-Stream
    #messageDiv
    #streamItContainer
        input#toBeStreamed(name='toBeStreamed' ,type='texbox') 
        #results.results
            ul
    #playerBigContainer
        #playerContainer
            #playVolumeContainer
                #playButtonDiv
                    #b_play 
                        i.fa.fa-refresh.fa-spin
                #volumeBarDiv
                    input#volumeBar(type='test', name='volumeBar', value='')
                .clear-fix
            #seekBarDiv
                input#seekBar(type='text', name='seekBar', value='') 
    script(src='/socket.io/socket.io.js')
    script(src='/js/ion.rangeSlider.min.js')
    script.
        var socket = io.connect('http://#{ip}:#{port}');
        socket.emit('test');
        var changingSeek = false;
        var changingVolume = false;
        var playerState = 7;
        var b_playValue = {
            7 :'<i class="fa fa-refresh fa-spin"></i>',
            1  :'<i class="fa fa-pause"></i>',
            2  :'<i class="fa fa-play"></i>',
            3  :'<i class="fa fa-spinner fa-pulse"></i>'
        }
        $("#seekBar").ionRangeSlider({
            type: "single",
            min: 0,
            max: 100,
            force_edges: true,
            from: 0,
            keyboard: true,
            onStart: function (data) {
            },
            onChange: function (data) {
                changingSeek = true;
            },
            onFinish: function (data) {
                socket.emit('seekTo',data.from);
                changingSeek = false;
            },
            onUpdate: function (data) {
            }
        });
        
        $("#volumeBar").ionRangeSlider({
            type: "single",
            min: 0,
            max: 100,
            force_edges: true,
            from: 100,
            keyboard: false,
            onStart: function (data) {
            },
            onChange: function (data) {
                changingVolume = true;
            },
            onFinish: function (data) {
                socket.emit('setVolume',data.from);
                changingVolume = false;
            },
            onUpdate: function (data) {
            }
        });
	
        $("#b_play").click(function(){
            if(playerState==1)
                socket.emit('pause');
            if(playerState==2)
                socket.emit('play');
        });

        var seekSlider = $("#seekBar").data("ionRangeSlider");
        var volumeSlider = $("#volumeBar").data("ionRangeSlider");
        socket.on('videoStatus',function(s){
            if(s.driverUp){
                if(s.youtubeOpen){
                    if(s.videoStats){
                        playerState = s.videoStats.playerState;
                        videoStats = s.videoStats;
                        $("#b_play").html(b_playValue[playerState]);
                        if(!changingSeek){
                            seekSlider.update({
                                from : parseInt(videoStats.currentTime),
                                max  : parseInt(videoStats.duration),
                                from_max: parseInt(videoStats.duration)
                            });
                        }
                        if(!changingVolume){
                            volumeSlider.update({
                                from:parseInt(videoStats.volume)
                            });
                        }
                        videoData = videoStats.videoData;
                        $('#messageDiv').html("Title: "+videoData.title);
                    }else{
                        console.log("status object dosn't exist.");
                    }
                }
                else{
                    $('#messageDiv').html("Driver is running, but youTube is not open on it.");
                }
            }else{
                $('#messageDiv').html("Driver is not running");   
            }
        });

        $(document).ready(function(){
            $("#toBeStreamed").focus();
            $(document).on('click', '#results li', function() {
                socket.emit('streamById',$(this).attr("id"));   
            });
            
            $(document).on('keyup', "#toBeStreamed", function(){
                q = $("#toBeStreamed")[0].value;
                q = q.replace(' ', '+');
                data = {
                    q    : q,
                    part : "snippet",
                    key  : "",
                    maxResults : "5",
                    type : "video"
                };
                $.ajax({
                    type: "GET",
                    url: "https://www.googleapis.com/youtube/v3/search",
                    datatype: 'json',
                    data : data,
                    success: function(response){
                        showResults(response);
                    }
                });
            });
        });

        // To display the videos received from youtube api.
        function showResults(response) {
            data = response.items;
            var htmly = '', len = response.items.length;
            
            for(var i = 0; i < len; i++) {
                htmly += '<li id="' + data[i].id.videoId;
                htmly += '"><div class="results-content"><div class="results-name row">';
                htmly += '<div class="results-img col-xs-2"><img src="';
                htmly += data[i].snippet.thumbnails["default"].url;
                htmly += '" /></div><div class="results-title col-xs-8">';
                htmly += data[i].snippet.title;
                htmly += '</div></div></div><div class="clear-fix"></div></li>';
            }
            $("#results ul").html(htmly);
        }
